
// This file has been generated by the GUI designer. Do not modify.
namespace BBB
{
	public partial class GUI_Vue
	{
		private global::Gtk.Table table1;
		private global::Gtk.CheckButton checkbutton_job_use;
		private global::Gtk.CheckButton checkbutton_outs_use;
		private global::BBB.fileOpenDlg fileopendlg_outs;
		private global::BBB.fileOpenDlg fileopendlg_scene_path;
		private global::BBB.fileOpenDlg fileopendlg_vue_path;
		private global::BBB.frameRange framerange;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.HSeparator hseparator2;
		private global::Gtk.HSeparator hseparator3;
		private global::Gtk.HSeparator hseparator4;
		private global::Gtk.HSeparator hseparator5;
		private global::Gtk.HSeparator hseparator6;
		private global::Gtk.Label label1;
		private global::Gtk.Label label2;
		private global::BBB.regionArea regionarea;
		private global::Gtk.SpinButton spinbutton_job;
		private global::Gtk.VBox vbox3;
		private global::Gtk.CheckButton checkbutton_range_use;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BBB.GUI_Vue
			global::Stetic.BinContainer.Attach (this);
			this.Name = "BBB.GUI_Vue";
			// Container child BBB.GUI_Vue.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(9)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.checkbutton_job_use = new global::Gtk.CheckButton ();
			this.checkbutton_job_use.CanFocus = true;
			this.checkbutton_job_use.Name = "checkbutton_job_use";
			this.checkbutton_job_use.Label = global::Mono.Unix.Catalog.GetString ("Использовать задания (job)");
			this.checkbutton_job_use.DrawIndicator = true;
			this.checkbutton_job_use.UseUnderline = true;
			this.table1.Add (this.checkbutton_job_use);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.checkbutton_job_use]));
			w1.TopAttach = ((uint)(8));
			w1.BottomAttach = ((uint)(9));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.checkbutton_outs_use = new global::Gtk.CheckButton ();
			this.checkbutton_outs_use.CanFocus = true;
			this.checkbutton_outs_use.Name = "checkbutton_outs_use";
			this.checkbutton_outs_use.Label = global::Mono.Unix.Catalog.GetString ("Перенаправлять вывод");
			this.checkbutton_outs_use.DrawIndicator = true;
			this.checkbutton_outs_use.UseUnderline = true;
			this.table1.Add (this.checkbutton_outs_use);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.checkbutton_outs_use]));
			w2.TopAttach = ((uint)(3));
			w2.BottomAttach = ((uint)(4));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.fileopendlg_outs = new global::BBB.fileOpenDlg ();
			this.fileopendlg_outs.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_outs.Name = "fileopendlg_outs";
			this.fileopendlg_outs.CheckType = false;
			this.table1.Add (this.fileopendlg_outs);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.fileopendlg_outs]));
			w3.TopAttach = ((uint)(3));
			w3.BottomAttach = ((uint)(4));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.fileopendlg_scene_path = new global::BBB.fileOpenDlg ();
			this.fileopendlg_scene_path.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_scene_path.Name = "fileopendlg_scene_path";
			this.fileopendlg_scene_path.CheckType = true;
			this.fileopendlg_scene_path.filterName = "Файл сцены Vue xStream (*.vue)";
			this.fileopendlg_scene_path.filterExec = "*.vue";
			this.table1.Add (this.fileopendlg_scene_path);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.fileopendlg_scene_path]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.fileopendlg_vue_path = new global::BBB.fileOpenDlg ();
			this.fileopendlg_vue_path.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_vue_path.Name = "fileopendlg_vue_path";
			this.fileopendlg_vue_path.CheckType = true;
			this.fileopendlg_vue_path.filterName = "Программа (*RenderNode.exe)";
			this.fileopendlg_vue_path.filterExec = "*RenderNode.exe";
			this.table1.Add (this.fileopendlg_vue_path);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.fileopendlg_vue_path]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.framerange = new global::BBB.frameRange ();
			this.framerange.Events = ((global::Gdk.EventMask)(256));
			this.framerange.Name = "framerange";
			this.framerange._end = 0;
			this.framerange._step = 0;
			this.framerange._jamp = 0;
			this.framerange._start = 0;
			this.table1.Add (this.framerange);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.framerange]));
			w6.TopAttach = ((uint)(5));
			w6.BottomAttach = ((uint)(6));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.table1.Add (this.hseparator1);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator1]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator2 = new global::Gtk.HSeparator ();
			this.hseparator2.Name = "hseparator2";
			this.table1.Add (this.hseparator2);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator2]));
			w8.TopAttach = ((uint)(2));
			w8.BottomAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator3 = new global::Gtk.HSeparator ();
			this.hseparator3.Name = "hseparator3";
			this.table1.Add (this.hseparator3);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator3]));
			w9.TopAttach = ((uint)(4));
			w9.BottomAttach = ((uint)(5));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator4 = new global::Gtk.HSeparator ();
			this.hseparator4.Name = "hseparator4";
			this.table1.Add (this.hseparator4);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator4]));
			w10.TopAttach = ((uint)(4));
			w10.BottomAttach = ((uint)(5));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator5 = new global::Gtk.HSeparator ();
			this.hseparator5.Name = "hseparator5";
			this.table1.Add (this.hseparator5);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator5]));
			w11.TopAttach = ((uint)(7));
			w11.BottomAttach = ((uint)(8));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator6 = new global::Gtk.HSeparator ();
			this.hseparator6.Name = "hseparator6";
			this.table1.Add (this.hseparator6);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator6]));
			w12.TopAttach = ((uint)(7));
			w12.BottomAttach = ((uint)(8));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Путь к программе (*RenderNode.exe)");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 1F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Файл сцены (*.vue)");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w14.TopAttach = ((uint)(1));
			w14.BottomAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.regionarea = new global::BBB.regionArea ();
			this.regionarea.Events = ((global::Gdk.EventMask)(256));
			this.regionarea.Name = "regionarea";
			this.regionarea.CheckBtn = false;
			this.regionarea.mType = 0;
			this.regionarea.labelText = "Разбивать на тайлы";
			this.table1.Add (this.regionarea);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1 [this.regionarea]));
			w15.TopAttach = ((uint)(6));
			w15.BottomAttach = ((uint)(7));
			w15.LeftAttach = ((uint)(1));
			w15.RightAttach = ((uint)(2));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spinbutton_job = new global::Gtk.SpinButton (0D, 100D, 1D);
			this.spinbutton_job.CanFocus = true;
			this.spinbutton_job.Name = "spinbutton_job";
			this.spinbutton_job.Adjustment.PageIncrement = 10D;
			this.spinbutton_job.ClimbRate = 1D;
			this.spinbutton_job.Numeric = true;
			this.table1.Add (this.spinbutton_job);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1 [this.spinbutton_job]));
			w16.TopAttach = ((uint)(8));
			w16.BottomAttach = ((uint)(9));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.checkbutton_range_use = new global::Gtk.CheckButton ();
			this.checkbutton_range_use.CanFocus = true;
			this.checkbutton_range_use.Name = "checkbutton_range_use";
			this.checkbutton_range_use.Label = global::Mono.Unix.Catalog.GetString ("Задать диапазон");
			this.checkbutton_range_use.DrawIndicator = true;
			this.checkbutton_range_use.UseUnderline = true;
			this.vbox3.Add (this.checkbutton_range_use);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.checkbutton_range_use]));
			w17.Position = 0;
			w17.Expand = false;
			w17.Fill = false;
			this.table1.Add (this.vbox3);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox3]));
			w18.TopAttach = ((uint)(5));
			w18.BottomAttach = ((uint)(6));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.checkbutton_range_use.Clicked += new global::System.EventHandler (this.OnCheckbutton2Clicked);
			this.spinbutton_job.Changed += new global::System.EventHandler (this.OnSpinbutton1Changed);
			this.regionarea.ChangeWidget += new global::System.EventHandler (this.OnRegionareaChangeWidget);
			this.framerange.ChangeWidget += new global::System.EventHandler (this.OnFramerange1ChangeWidget);
			this.fileopendlg_vue_path.Change += new global::System.EventHandler (this.OnFileopendlg1Change);
			this.fileopendlg_scene_path.Change += new global::System.EventHandler (this.OnFileopendlg3Change);
			this.fileopendlg_outs.Change += new global::System.EventHandler (this.OnFileopendlg2Change);
			this.checkbutton_outs_use.Clicked += new global::System.EventHandler (this.OnCheckbutton1Clicked);
			this.checkbutton_job_use.Clicked += new global::System.EventHandler (this.OnCheckbutton3Clicked);
		}
	}
}
