
// This file has been generated by the GUI designer. Do not modify.
namespace BBB
{
	public partial class frameRange
	{
		private global::Gtk.Table table3;
		private global::Gtk.HBox hbox1;
		private global::Gtk.Entry entry_range;
		private global::Gtk.Button button_cleer;
		private global::Gtk.Label label11;
		private global::Gtk.Label label12;
		private global::Gtk.Label label13;
		private global::Gtk.Label label14;
		private global::Gtk.Label label15;
		private global::Gtk.SpinButton spinbutton_end;
		private global::Gtk.SpinButton spinbutton_jamp;
		private global::Gtk.SpinButton spinbutton_start;
		private global::Gtk.SpinButton spinbutton_step_task;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BBB.frameRange
			global::Stetic.BinContainer.Attach (this);
			this.Name = "BBB.frameRange";
			// Container child BBB.frameRange.Gtk.Container+ContainerChild
			this.table3 = new global::Gtk.Table (((uint)(5)), ((uint)(2)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.entry_range = new global::Gtk.Entry ();
			global::Gtk.Tooltips w1 = new Gtk.Tooltips ();
			w1.SetTip (this.entry_range, "Отдельные кадры вводятся через запятую, последовольности через тире, например:\n1," +
				"6,50-60\nЭто значит, что 1,6 перечислены как отдельные кадры, а 50-60 как последо" +
				"вательность.", "Отдельные кадры вводятся через запятую, последовольности через тире, например:\n1," +
				"6,50-60\nЭто значит, что 1,6 перечислены как отдельные кадры, а 50-60 как последо" +
				"вательность.");
			this.entry_range.CanFocus = true;
			this.entry_range.Name = "entry_range";
			this.entry_range.IsEditable = true;
			this.entry_range.InvisibleChar = '●';
			this.hbox1.Add (this.entry_range);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.entry_range]));
			w2.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.button_cleer = new global::Gtk.Button ();
			this.button_cleer.CanFocus = true;
			this.button_cleer.Name = "button_cleer";
			this.button_cleer.UseUnderline = true;
			// Container child button_cleer.Gtk.Container+ContainerChild
			global::Gtk.Alignment w3 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w4 = new global::Gtk.HBox ();
			w4.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w5 = new global::Gtk.Image ();
			w5.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-clear", global::Gtk.IconSize.Menu);
			w4.Add (w5);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w7 = new global::Gtk.Label ();
			w4.Add (w7);
			w3.Add (w4);
			this.button_cleer.Add (w3);
			this.hbox1.Add (this.button_cleer);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.button_cleer]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			this.table3.Add (this.hbox1);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table3 [this.hbox1]));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label11 = new global::Gtk.Label ();
			this.label11.Name = "label11";
			this.label11.Xalign = 1F;
			this.label11.LabelProp = global::Mono.Unix.Catalog.GetString ("Ручной ввод");
			this.table3.Add (this.label11);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table3 [this.label11]));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label12 = new global::Gtk.Label ();
			this.label12.Name = "label12";
			this.label12.Xalign = 1F;
			this.label12.LabelProp = global::Mono.Unix.Catalog.GetString ("Стартовый кадр");
			this.table3.Add (this.label12);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table3 [this.label12]));
			w14.TopAttach = ((uint)(1));
			w14.BottomAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label13 = new global::Gtk.Label ();
			this.label13.Name = "label13";
			this.label13.Xalign = 1F;
			this.label13.LabelProp = global::Mono.Unix.Catalog.GetString ("Конечный кадр");
			this.table3.Add (this.label13);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table3 [this.label13]));
			w15.TopAttach = ((uint)(2));
			w15.BottomAttach = ((uint)(3));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label14 = new global::Gtk.Label ();
			this.label14.Name = "label14";
			this.label14.Xalign = 1F;
			this.label14.LabelProp = global::Mono.Unix.Catalog.GetString ("Пропускать по:");
			this.table3.Add (this.label14);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table3 [this.label14]));
			w16.TopAttach = ((uint)(3));
			w16.BottomAttach = ((uint)(4));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label15 = new global::Gtk.Label ();
			this.label15.Name = "label15";
			this.label15.LabelProp = global::Mono.Unix.Catalog.GetString ("Кадров на задачу:");
			this.table3.Add (this.label15);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table3 [this.label15]));
			w17.TopAttach = ((uint)(4));
			w17.BottomAttach = ((uint)(5));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spinbutton_end = new global::Gtk.SpinButton (1D, 1000000D, 1D);
			this.spinbutton_end.CanFocus = true;
			this.spinbutton_end.Name = "spinbutton_end";
			this.spinbutton_end.Adjustment.PageIncrement = 10D;
			this.spinbutton_end.ClimbRate = 1D;
			this.spinbutton_end.Numeric = true;
			this.spinbutton_end.Value = 100D;
			this.table3.Add (this.spinbutton_end);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table3 [this.spinbutton_end]));
			w18.TopAttach = ((uint)(2));
			w18.BottomAttach = ((uint)(3));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spinbutton_jamp = new global::Gtk.SpinButton (0D, 1000D, 1D);
			this.spinbutton_jamp.CanFocus = true;
			this.spinbutton_jamp.Name = "spinbutton_jamp";
			this.spinbutton_jamp.Adjustment.PageIncrement = 10D;
			this.spinbutton_jamp.ClimbRate = 1D;
			this.spinbutton_jamp.Numeric = true;
			this.table3.Add (this.spinbutton_jamp);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table3 [this.spinbutton_jamp]));
			w19.TopAttach = ((uint)(3));
			w19.BottomAttach = ((uint)(4));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spinbutton_start = new global::Gtk.SpinButton (0D, 1000000D, 1D);
			this.spinbutton_start.CanFocus = true;
			this.spinbutton_start.Name = "spinbutton_start";
			this.spinbutton_start.Adjustment.PageIncrement = 10D;
			this.spinbutton_start.ClimbRate = 1D;
			this.spinbutton_start.Numeric = true;
			this.table3.Add (this.spinbutton_start);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table3 [this.spinbutton_start]));
			w20.TopAttach = ((uint)(1));
			w20.BottomAttach = ((uint)(2));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spinbutton_step_task = new global::Gtk.SpinButton (1D, 1000D, 1D);
			this.spinbutton_step_task.CanFocus = true;
			this.spinbutton_step_task.Name = "spinbutton_step_task";
			this.spinbutton_step_task.Adjustment.PageIncrement = 10D;
			this.spinbutton_step_task.ClimbRate = 1D;
			this.spinbutton_step_task.Numeric = true;
			this.spinbutton_step_task.Value = 1D;
			this.table3.Add (this.spinbutton_step_task);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table3 [this.spinbutton_step_task]));
			w21.TopAttach = ((uint)(4));
			w21.BottomAttach = ((uint)(5));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table3);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.spinbutton_step_task.Changed += new global::System.EventHandler (this.OnSpinbuttonStepTaskChanged);
			this.spinbutton_start.Changed += new global::System.EventHandler (this.OnSpinbuttonStartChanged);
			this.spinbutton_jamp.Changed += new global::System.EventHandler (this.OnSpinbuttonJampChanged);
			this.spinbutton_end.Changed += new global::System.EventHandler (this.OnSpinbuttonEndChanged);
			this.entry_range.Changed += new global::System.EventHandler (this.OnEntryRangeChanged);
			this.button_cleer.Clicked += new global::System.EventHandler (this.OnButtonCleerClicked);
		}
	}
}
