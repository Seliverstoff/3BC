
// This file has been generated by the GUI designer. Do not modify.
namespace BBB
{
	public partial class GUI_AS
	{
		private global::Gtk.Table table1;
		private global::BBB.fileOpenDlg fileopendlg_path;
		private global::BBB.fileOpenDlg fileopendlg_scene_path;
		private global::BBB.frameRange framerange;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.HSeparator hseparator2;
		private global::Gtk.HSeparator hseparator3;
		private global::Gtk.HSeparator hseparator4;
		private global::Gtk.HSeparator hseparator5;
		private global::Gtk.HSeparator hseparator6;
		private global::Gtk.HSeparator hseparator7;
		private global::Gtk.HSeparator hseparator8;
		private global::Gtk.Label label_verbos;
		private global::Gtk.Label label1;
		private global::Gtk.Label label2;
		private global::Gtk.VBox vbox_outs;
		private global::BBB.fileOpenDlg fileopendlg_outs;
		private global::Gtk.HBox hbox_outs;
		private global::Gtk.Label label3;
		private global::Gtk.ComboBox combobox_outs_format;
		private global::Gtk.VBox vbox_renders_setting;
		private global::Gtk.CheckButton checkbutton_aa;
		private global::Gtk.CheckButton checkbutton_shapefx;
		private global::Gtk.CheckButton checkbutton_layerfx;
		private global::Gtk.CheckButton checkbutton_halfsize;
		private global::Gtk.CheckButton checkbutton_halffps;
		private global::Gtk.CheckButton checkbutton_particles;
		private global::Gtk.CheckButton checkbutton_smooth;
		private global::Gtk.CheckButton checkbutton_ntsc;
		private global::Gtk.CheckButton checkbutton_alpha;
		private global::Gtk.CheckButton checkbutton_linewidth;
		private global::Gtk.VBox vbox3;
		private global::Gtk.CheckButton checkbutton_rsett_use;
		private global::Gtk.VBox vbox4;
		private global::Gtk.CheckButton checkbutton_range_use;
		private global::Gtk.VBox vbox5;
		private global::Gtk.CheckButton checkbutton_outs_use;
		private global::Gtk.VBox vbox7;
		private global::Gtk.CheckButton checkbutton_verbose;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget BBB.GUI_AS
			global::Stetic.BinContainer.Attach (this);
			this.Name = "BBB.GUI_AS";
			// Container child BBB.GUI_AS.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(10)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.fileopendlg_path = new global::BBB.fileOpenDlg ();
			this.fileopendlg_path.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_path.Name = "fileopendlg_path";
			this.fileopendlg_path.CheckType = true;
			this.fileopendlg_path.filterName = "Файл программы (Anime Studio Pro.exe)";
			this.fileopendlg_path.filterExec = "Anime Studio Pro.exe";
			this.table1.Add (this.fileopendlg_path);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.fileopendlg_path]));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.fileopendlg_scene_path = new global::BBB.fileOpenDlg ();
			this.fileopendlg_scene_path.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_scene_path.Name = "fileopendlg_scene_path";
			this.fileopendlg_scene_path.CheckType = true;
			this.fileopendlg_scene_path.filterName = "Файл сцены Anime Studio (*.anme)";
			this.fileopendlg_scene_path.filterExec = "*.anme";
			this.table1.Add (this.fileopendlg_scene_path);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.fileopendlg_scene_path]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.framerange = new global::BBB.frameRange ();
			this.framerange.Events = ((global::Gdk.EventMask)(256));
			this.framerange.Name = "framerange";
			this.framerange._end = 0;
			this.framerange._step = 0;
			this.framerange._jamp = 0;
			this.framerange._start = 0;
			this.table1.Add (this.framerange);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.framerange]));
			w3.TopAttach = ((uint)(5));
			w3.BottomAttach = ((uint)(6));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.table1.Add (this.hseparator1);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator1]));
			w4.TopAttach = ((uint)(8));
			w4.BottomAttach = ((uint)(9));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator2 = new global::Gtk.HSeparator ();
			this.hseparator2.Name = "hseparator2";
			this.table1.Add (this.hseparator2);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator2]));
			w5.TopAttach = ((uint)(8));
			w5.BottomAttach = ((uint)(9));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator3 = new global::Gtk.HSeparator ();
			this.hseparator3.Name = "hseparator3";
			this.table1.Add (this.hseparator3);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator3]));
			w6.TopAttach = ((uint)(6));
			w6.BottomAttach = ((uint)(7));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator4 = new global::Gtk.HSeparator ();
			this.hseparator4.Name = "hseparator4";
			this.table1.Add (this.hseparator4);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator4]));
			w7.TopAttach = ((uint)(6));
			w7.BottomAttach = ((uint)(7));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator5 = new global::Gtk.HSeparator ();
			this.hseparator5.Name = "hseparator5";
			this.table1.Add (this.hseparator5);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator5]));
			w8.TopAttach = ((uint)(4));
			w8.BottomAttach = ((uint)(5));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator6 = new global::Gtk.HSeparator ();
			this.hseparator6.Name = "hseparator6";
			this.table1.Add (this.hseparator6);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator6]));
			w9.TopAttach = ((uint)(4));
			w9.BottomAttach = ((uint)(5));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator7 = new global::Gtk.HSeparator ();
			this.hseparator7.Name = "hseparator7";
			this.table1.Add (this.hseparator7);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator7]));
			w10.TopAttach = ((uint)(2));
			w10.BottomAttach = ((uint)(3));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hseparator8 = new global::Gtk.HSeparator ();
			this.hseparator8.Name = "hseparator8";
			this.table1.Add (this.hseparator8);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.hseparator8]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label_verbos = new global::Gtk.Label ();
			this.label_verbos.Name = "label_verbos";
			this.label_verbos.Xalign = 0F;
			this.label_verbos.LabelProp = global::Mono.Unix.Catalog.GetString ("Этот режим может быть не виден в Backburner, либо вы прочитаете отчет в консоле с" +
				"ерверов, по завершению просчета одного задания.");
			this.label_verbos.Wrap = true;
			this.table1.Add (this.label_verbos);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.label_verbos]));
			w12.TopAttach = ((uint)(9));
			w12.BottomAttach = ((uint)(10));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Путь к программе Anime Studio");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 1F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Путь к файлу сцены (*.anme)");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w14.TopAttach = ((uint)(1));
			w14.BottomAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox_outs = new global::Gtk.VBox ();
			this.vbox_outs.Name = "vbox_outs";
			this.vbox_outs.Spacing = 6;
			// Container child vbox_outs.Gtk.Box+BoxChild
			this.fileopendlg_outs = new global::BBB.fileOpenDlg ();
			this.fileopendlg_outs.Events = ((global::Gdk.EventMask)(256));
			this.fileopendlg_outs.Name = "fileopendlg_outs";
			this.fileopendlg_outs.CheckType = false;
			this.vbox_outs.Add (this.fileopendlg_outs);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vbox_outs [this.fileopendlg_outs]));
			w15.Position = 0;
			w15.Expand = false;
			w15.Fill = false;
			// Container child vbox_outs.Gtk.Box+BoxChild
			this.hbox_outs = new global::Gtk.HBox ();
			this.hbox_outs.Name = "hbox_outs";
			this.hbox_outs.Spacing = 6;
			// Container child hbox_outs.Gtk.Box+BoxChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Формат вывода");
			this.hbox_outs.Add (this.label3);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.hbox_outs [this.label3]));
			w16.Position = 0;
			w16.Expand = false;
			w16.Fill = false;
			// Container child hbox_outs.Gtk.Box+BoxChild
			this.combobox_outs_format = global::Gtk.ComboBox.NewText ();
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("QT"));
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("JPEG"));
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("TGA"));
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("BMP"));
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("PNG"));
			this.combobox_outs_format.AppendText (global::Mono.Unix.Catalog.GetString ("SWF"));
			this.combobox_outs_format.Name = "combobox_outs_format";
			this.hbox_outs.Add (this.combobox_outs_format);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.hbox_outs [this.combobox_outs_format]));
			w17.Position = 1;
			this.vbox_outs.Add (this.hbox_outs);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.vbox_outs [this.hbox_outs]));
			w18.Position = 1;
			w18.Expand = false;
			w18.Fill = false;
			this.table1.Add (this.vbox_outs);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox_outs]));
			w19.TopAttach = ((uint)(7));
			w19.BottomAttach = ((uint)(8));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox_renders_setting = new global::Gtk.VBox ();
			this.vbox_renders_setting.Name = "vbox_renders_setting";
			this.vbox_renders_setting.Spacing = 6;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_aa = new global::Gtk.CheckButton ();
			this.checkbutton_aa.CanFocus = true;
			this.checkbutton_aa.Name = "checkbutton_aa";
			this.checkbutton_aa.Label = global::Mono.Unix.Catalog.GetString ("Антиальясинг");
			this.checkbutton_aa.DrawIndicator = true;
			this.checkbutton_aa.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_aa);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_aa]));
			w20.Position = 0;
			w20.Expand = false;
			w20.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_shapefx = new global::Gtk.CheckButton ();
			this.checkbutton_shapefx.CanFocus = true;
			this.checkbutton_shapefx.Name = "checkbutton_shapefx";
			this.checkbutton_shapefx.Label = global::Mono.Unix.Catalog.GetString ("Эффекты объектов (shape effects)");
			this.checkbutton_shapefx.DrawIndicator = true;
			this.checkbutton_shapefx.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_shapefx);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_shapefx]));
			w21.Position = 1;
			w21.Expand = false;
			w21.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_layerfx = new global::Gtk.CheckButton ();
			this.checkbutton_layerfx.CanFocus = true;
			this.checkbutton_layerfx.Name = "checkbutton_layerfx";
			this.checkbutton_layerfx.Label = global::Mono.Unix.Catalog.GetString ("Эффекты слоев");
			this.checkbutton_layerfx.DrawIndicator = true;
			this.checkbutton_layerfx.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_layerfx);
			global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_layerfx]));
			w22.Position = 2;
			w22.Expand = false;
			w22.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_halfsize = new global::Gtk.CheckButton ();
			this.checkbutton_halfsize.CanFocus = true;
			this.checkbutton_halfsize.Name = "checkbutton_halfsize";
			this.checkbutton_halfsize.Label = global::Mono.Unix.Catalog.GetString ("Половина размера");
			this.checkbutton_halfsize.DrawIndicator = true;
			this.checkbutton_halfsize.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_halfsize);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_halfsize]));
			w23.Position = 3;
			w23.Expand = false;
			w23.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_halffps = new global::Gtk.CheckButton ();
			this.checkbutton_halffps.CanFocus = true;
			this.checkbutton_halffps.Name = "checkbutton_halffps";
			this.checkbutton_halffps.Label = global::Mono.Unix.Catalog.GetString ("Половина частоты кадров");
			this.checkbutton_halffps.DrawIndicator = true;
			this.checkbutton_halffps.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_halffps);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_halffps]));
			w24.Position = 4;
			w24.Expand = false;
			w24.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_particles = new global::Gtk.CheckButton ();
			this.checkbutton_particles.CanFocus = true;
			this.checkbutton_particles.Name = "checkbutton_particles";
			this.checkbutton_particles.Label = global::Mono.Unix.Catalog.GetString ("Частицы");
			this.checkbutton_particles.DrawIndicator = true;
			this.checkbutton_particles.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_particles);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_particles]));
			w25.Position = 5;
			w25.Expand = false;
			w25.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_smooth = new global::Gtk.CheckButton ();
			this.checkbutton_smooth.CanFocus = true;
			this.checkbutton_smooth.Name = "checkbutton_smooth";
			this.checkbutton_smooth.Label = global::Mono.Unix.Catalog.GetString ("Сверхсглаживание");
			this.checkbutton_smooth.DrawIndicator = true;
			this.checkbutton_smooth.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_smooth);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_smooth]));
			w26.Position = 6;
			w26.Expand = false;
			w26.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_ntsc = new global::Gtk.CheckButton ();
			this.checkbutton_ntsc.CanFocus = true;
			this.checkbutton_ntsc.Name = "checkbutton_ntsc";
			this.checkbutton_ntsc.Label = global::Mono.Unix.Catalog.GetString ("Цвет для NTSC");
			this.checkbutton_ntsc.DrawIndicator = true;
			this.checkbutton_ntsc.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_ntsc);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_ntsc]));
			w27.Position = 7;
			w27.Expand = false;
			w27.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_alpha = new global::Gtk.CheckButton ();
			this.checkbutton_alpha.CanFocus = true;
			this.checkbutton_alpha.Name = "checkbutton_alpha";
			this.checkbutton_alpha.Label = global::Mono.Unix.Catalog.GetString ("Premultiply альфа");
			this.checkbutton_alpha.DrawIndicator = true;
			this.checkbutton_alpha.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_alpha);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_alpha]));
			w28.Position = 8;
			w28.Expand = false;
			w28.Fill = false;
			// Container child vbox_renders_setting.Gtk.Box+BoxChild
			this.checkbutton_linewidth = new global::Gtk.CheckButton ();
			this.checkbutton_linewidth.CanFocus = true;
			this.checkbutton_linewidth.Name = "checkbutton_linewidth";
			this.checkbutton_linewidth.Label = global::Mono.Unix.Catalog.GetString ("Меняющаяся толшина линий");
			this.checkbutton_linewidth.DrawIndicator = true;
			this.checkbutton_linewidth.UseUnderline = true;
			this.vbox_renders_setting.Add (this.checkbutton_linewidth);
			global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox_renders_setting [this.checkbutton_linewidth]));
			w29.Position = 9;
			w29.Expand = false;
			w29.Fill = false;
			this.table1.Add (this.vbox_renders_setting);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox_renders_setting]));
			w30.TopAttach = ((uint)(3));
			w30.BottomAttach = ((uint)(4));
			w30.LeftAttach = ((uint)(1));
			w30.RightAttach = ((uint)(2));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.checkbutton_rsett_use = new global::Gtk.CheckButton ();
			this.checkbutton_rsett_use.CanFocus = true;
			this.checkbutton_rsett_use.Name = "checkbutton_rsett_use";
			this.checkbutton_rsett_use.Label = global::Mono.Unix.Catalog.GetString ("Настроить качество рендера");
			this.checkbutton_rsett_use.DrawIndicator = true;
			this.checkbutton_rsett_use.UseUnderline = true;
			this.vbox3.Add (this.checkbutton_rsett_use);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.checkbutton_rsett_use]));
			w31.Position = 0;
			w31.Expand = false;
			w31.Fill = false;
			this.table1.Add (this.vbox3);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox3]));
			w32.TopAttach = ((uint)(3));
			w32.BottomAttach = ((uint)(4));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.checkbutton_range_use = new global::Gtk.CheckButton ();
			this.checkbutton_range_use.CanFocus = true;
			this.checkbutton_range_use.Name = "checkbutton_range_use";
			this.checkbutton_range_use.Label = global::Mono.Unix.Catalog.GetString ("Задать диапазон кадров");
			this.checkbutton_range_use.DrawIndicator = true;
			this.checkbutton_range_use.UseUnderline = true;
			this.vbox4.Add (this.checkbutton_range_use);
			global::Gtk.Box.BoxChild w33 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.checkbutton_range_use]));
			w33.Position = 0;
			w33.Expand = false;
			w33.Fill = false;
			this.table1.Add (this.vbox4);
			global::Gtk.Table.TableChild w34 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox4]));
			w34.TopAttach = ((uint)(5));
			w34.BottomAttach = ((uint)(6));
			w34.XOptions = ((global::Gtk.AttachOptions)(4));
			w34.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.checkbutton_outs_use = new global::Gtk.CheckButton ();
			this.checkbutton_outs_use.CanFocus = true;
			this.checkbutton_outs_use.Name = "checkbutton_outs_use";
			this.checkbutton_outs_use.Label = global::Mono.Unix.Catalog.GetString ("Перенаправлять вывод");
			this.checkbutton_outs_use.DrawIndicator = true;
			this.checkbutton_outs_use.UseUnderline = true;
			this.vbox5.Add (this.checkbutton_outs_use);
			global::Gtk.Box.BoxChild w35 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.checkbutton_outs_use]));
			w35.Position = 0;
			w35.Expand = false;
			w35.Fill = false;
			this.table1.Add (this.vbox5);
			global::Gtk.Table.TableChild w36 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox5]));
			w36.TopAttach = ((uint)(7));
			w36.BottomAttach = ((uint)(8));
			w36.XOptions = ((global::Gtk.AttachOptions)(4));
			w36.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.vbox7 = new global::Gtk.VBox ();
			this.vbox7.Name = "vbox7";
			this.vbox7.Spacing = 6;
			// Container child vbox7.Gtk.Box+BoxChild
			this.checkbutton_verbose = new global::Gtk.CheckButton ();
			this.checkbutton_verbose.CanFocus = true;
			this.checkbutton_verbose.Name = "checkbutton_verbose";
			this.checkbutton_verbose.Label = global::Mono.Unix.Catalog.GetString ("Отображать ход работы");
			this.checkbutton_verbose.DrawIndicator = true;
			this.checkbutton_verbose.UseUnderline = true;
			this.vbox7.Add (this.checkbutton_verbose);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox7 [this.checkbutton_verbose]));
			w37.Position = 0;
			w37.Expand = false;
			w37.Fill = false;
			this.table1.Add (this.vbox7);
			global::Gtk.Table.TableChild w38 = ((global::Gtk.Table.TableChild)(this.table1 [this.vbox7]));
			w38.TopAttach = ((uint)(9));
			w38.BottomAttach = ((uint)(10));
			w38.XOptions = ((global::Gtk.AttachOptions)(4));
			w38.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.checkbutton_verbose.Clicked += new global::System.EventHandler (this.OnCheckbuttonVerboseClicked);
			this.checkbutton_outs_use.Clicked += new global::System.EventHandler (this.OnCheckbuttonOutsUseClicked);
			this.checkbutton_range_use.Clicked += new global::System.EventHandler (this.OnCheckbuttonRangeUseClicked);
			this.checkbutton_rsett_use.Clicked += new global::System.EventHandler (this.OnCheckbuttonRsettUseClicked);
			this.checkbutton_aa.Clicked += new global::System.EventHandler (this.OnCheckbuttonAaClicked);
			this.checkbutton_shapefx.Clicked += new global::System.EventHandler (this.OnCheckbuttonShapefxClicked);
			this.checkbutton_layerfx.Clicked += new global::System.EventHandler (this.OnCheckbuttonLayerfxClicked);
			this.checkbutton_halfsize.Clicked += new global::System.EventHandler (this.OnCheckbuttonHalfsizeClicked);
			this.checkbutton_halffps.Clicked += new global::System.EventHandler (this.OnCheckbuttonHalffpsClicked);
			this.checkbutton_particles.Clicked += new global::System.EventHandler (this.OnCheckbuttonParticlesClicked);
			this.checkbutton_smooth.Clicked += new global::System.EventHandler (this.OnCheckbuttonSmoothClicked);
			this.checkbutton_ntsc.Clicked += new global::System.EventHandler (this.OnCheckbuttonNtscClicked);
			this.checkbutton_alpha.Clicked += new global::System.EventHandler (this.OnCheckbuttonAlphaClicked);
			this.checkbutton_linewidth.Clicked += new global::System.EventHandler (this.OnCheckbuttonLinewidthClicked);
			this.fileopendlg_outs.Change += new global::System.EventHandler (this.OnFileopendlgOutsChange);
			this.combobox_outs_format.Changed += new global::System.EventHandler (this.OnComboboxOutsFormatChanged);
			this.framerange.ChangeWidget += new global::System.EventHandler (this.OnFramerangeChangeWidget);
			this.fileopendlg_scene_path.Change += new global::System.EventHandler (this.OnFileopendlgScenePathChange);
			this.fileopendlg_path.Change += new global::System.EventHandler (this.OnFileopendlgPathChange);
		}
	}
}
